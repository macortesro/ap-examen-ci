name: CI

on: [push, pull_request]

env:
  IMAGE_NAME: app-candidate
  VERSION: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Build
        run: mvn -B -U -ntp clean compile

  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Run Unit Tests
        run: mvn -B -U -ntp test

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Run Integration Tests
        run: mvn -B -U -ntp verify

  acceptance:
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - uses: actions/checkout@v4

      # Construir la imagen Docker con un tag único (SHA)
      - name: Build candidate image
        run: docker build -t $IMAGE_NAME:$VERSION .

      # Simular despliegue Blue (estable) en puerto 8080
      - name: Run BLUE (stable) on 8080
        run: docker run -d -p 8080:8080 --name blue $IMAGE_NAME:$VERSION || true

      # Simular despliegue Green (candidato) en puerto 8081
      - name: Run GREEN (candidate) on 8081
        run: docker run -d -p 8081:8080 --name green $IMAGE_NAME:$VERSION

      # Ejecutar pruebas de aceptación contra GREEN
      - name: Acceptance tests against GREEN
        run: |
          echo "Probando entorno GREEN..."
          curl --fail http://localhost:8081 || exit 1

  promote-or-rollback:
    runs-on: ubuntu-latest
    needs: acceptance
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Promote if GREEN passed
        if: success()
        run: |
          echo "✅ GREEN pasó pruebas, promoviendo a producción (8080)..."
          docker stop blue || true
          docker rm blue || true
          docker run -d -p 8080:8080 --name blue $IMAGE_NAME:$VERSION

      - name: Rollback if GREEN failed
        if: failure()
        run: |
          echo "⚠️ GREEN falló, rollback al BLUE estable"
          docker stop green || true
          docker rm green || true
