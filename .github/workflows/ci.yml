name: CI

on: [push, pull_request]

env:
  IMAGE_NAME: app-candidate
  VERSION: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Build
        run: mvn -B -U -ntp clean compile

  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Run Unit Tests
        run: mvn -B -U -ntp test

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Run Integration Tests
        run: mvn -B -U -ntp verify

  acceptance:
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - uses: actions/checkout@v4

      - name: Build candidate image (multi-stage)
        run: docker build -t $IMAGE_NAME:$VERSION .

      - name: Clean old containers (if any)
        run: |
          docker rm -f blue  || true
          docker rm -f green || true

      - name: Run BLUE (stable) on 8080
        run: docker run -d --name blue  -p 8080:8080 $IMAGE_NAME:$VERSION

      - name: Run GREEN (candidate) on 8081
        run: docker run -d --name green -p 8081:8080 $IMAGE_NAME:$VERSION

      - name: Wait for GREEN to be ready
        run: |
          for i in {1..30}; do
            if curl -fsS http://localhost:8081/ > /dev/null; then
              echo "GREEN is ready"; exit 0
            fi
            echo "Waiting GREEN ($i)..."; sleep 1
          done
          echo "GREEN did not become ready in time"; exit 1

      - name: Acceptance tests against GREEN
        run: |
          echo "Probando entorno GREEN..."
          curl -fsS http://localhost:8081/ | tee /dev/stderr | grep -q "OK"
