name: CD - Deploy a Test (Blue/Green + Rollback)

on:
  workflow_dispatch:
  push:
    branches: [ main ]  

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build & Unit+Integration tests
        run: |
          mvn -B -U -ntp clean verify

      - name: Build candidate image
        run: |
          SHORT_SHA="${GITHUB_SHA::7}"
          docker build \
            -t app-candidate:${SHORT_SHA} \
            --build-arg APP_VERSION="${SHORT_SHA}" \
            -f deploy/Dockerfile deploy

      - name: Save candidate tag for next jobs
        id: meta
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

  acceptance:
    runs-on: ubuntu-latest
    needs: build-and-package
    steps:
      - uses: actions/checkout@v4

      - name: Load candidate info
        run: echo "SHORT_SHA=${{ needs.build-and-package.outputs.short_sha }}" >> $GITHUB_ENV
        env:
          SHORT_SHA: ${{ needs.build-and-package.outputs.short_sha }}

      - name: Build candidate image again (for this runner)
        run: |
          docker build \
            -t app-candidate:${SHORT_SHA} \
            --build-arg APP_VERSION="${SHORT_SHA}" \
            -f deploy/Dockerfile deploy


      - name: Run BLUE (stable) on 8080
        run: |
          set -e
          echo "stable" > version.txt
          docker build -t app-blue:stable - <<'EOF'
          FROM nginx:alpine
          COPY version.txt /usr/share/nginx/html/version.txt
          EOF
          docker run -d --rm --name app-blue -p 8080:80 app-blue:stable
          curl -fsS http://localhost:8080/version.txt

      # GREEN = candidato en el puerto 8081
      - name: Run GREEN (candidate) on 8081
        run: |
          docker run -d --rm --name app-green -p 8081:80 app-candidate:${SHORT_SHA}

      - name: Acceptance tests against GREEN
        run: |
          chmod +x scripts/acceptance.sh
          ./scripts/acceptance.sh "http://localhost:8081/version.txt" "${SHORT_SHA}"

  promote-or-rollback:
    runs-on: ubuntu-latest
    needs: acceptance
    if: always()   
    steps:
      - name: Decide promotion / rollback
        run: |
          set -e
          echo "CI status of acceptance: ${{ needs.acceptance.result }}"
          if [ "${{ needs.acceptance.result }}" = "success" ]; then
            echo "✅ Promoviendo GREEN -> BLUE (simulado)"
            
            docker stop app-blue || true
            docker stop app-green || true
            
            echo "Promoción completada (simulada)."
          else
            echo "⛔ Acceptance falló. Manteniendo BLUE y descartando GREEN (rollback)."
            docker stop app-green || true
            
          fi
